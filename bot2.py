import telebot
from telebot import types
from dotenv import load_dotenv
import os
from questions import questionsDict

load_dotenv()
token = os.getenv("TG_TOKEN")
bot = telebot.TeleBot(token)

CategoriesMarkup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
QueCat1 = types.KeyboardButton('üéì –û–±—É—á–µ–Ω–∏–µ')
QueCat2 = types.KeyboardButton('‚ùï –õ—å–≥–æ—Ç—ã')
QueCat3 = types.KeyboardButton('üìÇ –ü–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤')
QueCat4 = types.KeyboardButton('üßë‚Äçüéì –í—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è')
QueCat5 = types.KeyboardButton('üßæ –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è')
QueCat6 = types.KeyboardButton('‚ùì –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã')

CategoriesMarkup.add(QueCat1, QueCat2, QueCat3, QueCat4, QueCat5, QueCat6)

@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç, –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ –≤ —á–∞—Ç–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –ø–æ–∏—Å–∫–æ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –Ω–∏–∂–µ', reply_markup=CategoriesMarkup)


@bot.message_handler(content_types=["text"])
def any_msg(message):
    
    defaultMarkup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    if message.text == 'üéì –û–±—É—á–µ–Ω–∏–µ':
        for item in questionsDict:
            if item['category'] == 'education':
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
        defaultMarkup.add(types.KeyboardButton('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–±—É—á–µ–Ω–∏–µ–º', reply_markup=defaultMarkup)
        return
    elif message.text == '‚ùï –õ—å–≥–æ—Ç—ã':
        for item in questionsDict:
            if item['category'] == 'privileges':
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
        defaultMarkup.add(types.KeyboardButton('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ª—å–≥–æ—Ç–∞–º–∏', reply_markup=defaultMarkup)
        return
    elif message.text == 'üìÇ –ü–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤':
        for item in questionsDict:
            if item['category'] == 'docs':
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
        defaultMarkup.add(types.KeyboardButton('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–¥–∞—á–µ–π –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤', reply_markup=defaultMarkup)
        return
    elif message.text == 'üßë‚Äçüéì –í—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è':
        for item in questionsDict:
            if item['category'] == 'choice':
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
        defaultMarkup.add(types.KeyboardButton('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—ã–±–æ—Ä–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è', reply_markup=defaultMarkup)
        return
    elif message.text == 'üßæ –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è':
        for item in questionsDict:
            if item['category'] == 'test':
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
        defaultMarkup.add(types.KeyboardButton('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏—è–º–∏', reply_markup=defaultMarkup)
        return
    elif message.text == '‚ùì –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã':
        for item in questionsDict:
            if item['category'] == 'other':
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
        defaultMarkup.add(types.KeyboardButton('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
        bot.send_message(message.chat.id, '–û—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã', reply_markup=defaultMarkup)
        return
    elif message.text == 'üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.reply_to(message, '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', reply_markup=CategoriesMarkup)
        return

    i= 0
    for item in questionsDict:
        if item['question'] == message.text:
            bot.reply_to(message, item['answer'])
            return

        for keyword in item['keywords']:
            if keyword in message.text.lower():
                itemBtn = types.KeyboardButton(item['question'])
                defaultMarkup.add(itemBtn)
                i+=1
                break
    if i == 0:
        bot.send_message(message.chat.id, '–ü–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ–∏—Å–∫–æ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', reply_markup=CategoriesMarkup)
    else:
        defaultMarkup.add('üìñ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å', reply_markup=defaultMarkup)            




bot.polling(none_stop=True)